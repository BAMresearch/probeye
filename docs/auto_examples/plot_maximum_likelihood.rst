
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plot_maximum_likelihood.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_maximum_likelihood.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_maximum_likelihood.py:


Simple linear regression (maximum likelihood)
=============================================

A simple linear regression example with two model parameters and one noise parameter.

The model equation is y = a * x + b with a, b being the model parameters and the
noise model is a normal zero-mean distribution with the std. deviation to infer.
The problem is solved via maximum likelihood estimation.

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Import what we will need for this example.

.. GENERATED FROM PYTHON SOURCE LINES 14-28

.. code-block:: default


    # third party imports
    import numpy as np
    import matplotlib.pyplot as plt

    # local imports (problem definition)
    from probeye.definition.inference_problem import InferenceProblem
    from probeye.definition.forward_model import ForwardModelBase
    from probeye.definition.sensor import Sensor
    from probeye.definition.likelihood_model import GaussianLikelihoodModel

    # local imports (inference related)
    from probeye.inference.scipy_.solver import ScipySolver








.. GENERATED FROM PYTHON SOURCE LINES 29-32

We start by generating a synthetic data set from a known linear model. Later we
will pretend to forgot about the parameters of this ground truth model and will try
to recover them from the data. The slope and intercept of the ground truth model:

.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: default


    a_true = 2.5
    b_true = 1.7








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Generate a few data points that we contaminate with a Gaussian error:

.. GENERATED FROM PYTHON SOURCE LINES 38-47

.. code-block:: default

    n_tests = 50
    seed = 1

    np.random.seed(seed)
    x_test = np.linspace(0.0, 1.0, n_tests)
    y_true = a_true * x_test + b_true
    sigma_noise = 0.5
    y_test = y_true + np.random.normal(loc=0, scale=sigma_noise, size=n_tests)








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Visualize our data points

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: default

    plt.plot(x_test, y_test, "o")
    plt.xlabel("x")
    plt.ylabel("y")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_maximum_likelihood_001.png
   :alt: plot maximum likelihood
   :srcset: /auto_examples/images/sphx_glr_plot_maximum_likelihood_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-56

Define our parametrized linear model:

.. GENERATED FROM PYTHON SOURCE LINES 56-68

.. code-block:: default

    class LinearModel(ForwardModelBase):
        def response(self, inp):
            # this method *must* be provided by the user
            x = inp["x"]
            m = inp["m"]
            b = inp["b"]
            response = {}
            for os in self.output_sensors:
                response[os.name] = m * x + b
            return response









.. GENERATED FROM PYTHON SOURCE LINES 69-74

Define the inference problem.
Initialize the inference problem with a useful name; note that the
name will only be stored as an attribute of the InferenceProblem and
is not important for the problem itself; can be useful when dealing
with multiple problems

.. GENERATED FROM PYTHON SOURCE LINES 74-77

.. code-block:: default


    problem = InferenceProblem("Linear regression with normal noise")





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    2022-02-11 10:12:19.977 | INFO     | # ================================================================================================ # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.977 | INFO     | #                                                                                                  # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.977 | INFO     | #                                            dP                                                    # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.977 | INFO     | #                                            88                                                    # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.977 | INFO     | #                  88d888b. 88d888b..d8888b. 88d888b. .d8888b. dP    dP .d8888b.                   # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                  88'  `88 88'     88'  `88 88'  `88 88ooood8 88    88 88ooood8                   # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                  88.  .88 88      88.  .88 88.  .88 88.      88.  .88 88.                        # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                  88Y888P' dP      `88888P' 88Y8888' `88888P' `8888P88 `88888P'                   # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                  88                                                .88                           # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                  dP                                            d8888P                            # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                                                                                                  # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | # ================================================================================================ # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.978 | INFO     | #                                                                                                  # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.979 | INFO     | #        Version 2.1.0 - A general framework for setting up parameter estimation problems.         # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.979 | INFO     | #                                                                                                  # | probeye.subroutines:print_probeye_header:659
    2022-02-11 10:12:19.979 | INFO     | # ================================================================================================ # | probeye.subroutines:print_probeye_header:659




.. GENERATED FROM PYTHON SOURCE LINES 78-88

Add all parameters to the problem; the first argument states the
parameter's global name (here: 'a', 'b' and 'sigma'); the second
argument defines the parameter type (three options: 'model' for
parameter's of the forward model, 'prior' for prior parameters and
'noise' for parameters of the noise model); the 'info'-argument is a
short description string used for logging, and the tex-argument gives
a tex-string of the parameter used for plotting; finally, the prior-
argument specifies the parameter's prior; note that this definition
of a prior will result in the initialization of constant parameters of
type 'prior' in the background

.. GENERATED FROM PYTHON SOURCE LINES 88-92

.. code-block:: default

    problem.add_parameter("a", "model", tex="$a$")
    problem.add_parameter("b", "model", tex="$b$")
    problem.add_parameter("sigma", "likelihood", tex=r"$\sigma$")








.. GENERATED FROM PYTHON SOURCE LINES 93-107

Add the forward model to the problem; note that the first positional
argument [{'a': 'm'}, 'b'] passed to LinearModel defines the forward
model's parameters by name via a list with elements structured like
{<global parameter name>: <local parameter name>}; a global name is a
name introduced by problem.add_parameter, while a local name is a name
used in the response-method of the forward model class (see the class
LinearModel above); note that the use of the local parameter name 'm'
for the global parameter 'a' is added here only to highlight the
possibility of this feature; it is not necessary at all here; whenever
forward model's parameter has a similar local and global name (which
should be the case most of the times), one doesn't have to use the
verbose notation  {<global parameter name>: <local parameter name>}
but can instead just write the parameter's (global=local) name, like
it is done with the forward model's parameter 'b' below

.. GENERATED FROM PYTHON SOURCE LINES 107-112

.. code-block:: default

    isensor = Sensor("x")
    osensor = Sensor("y")
    linear_model = LinearModel([{"a": "m"}, "b"], [isensor], [osensor])
    problem.add_forward_model("LinearModel", linear_model)








.. GENERATED FROM PYTHON SOURCE LINES 113-114

Add test data to the Inference Problem

.. GENERATED FROM PYTHON SOURCE LINES 114-120

.. code-block:: default

    problem.add_experiment(
        "TestSeries_1",
        fwd_model_name="LinearModel",
        sensor_values={isensor.name: x_test, osensor.name: y_test},
    )








.. GENERATED FROM PYTHON SOURCE LINES 121-122

add the likelihood model to the problem

.. GENERATED FROM PYTHON SOURCE LINES 122-129

.. code-block:: default

    problem.add_likelihood_model(
        GaussianLikelihoodModel(prms_def={"sigma": "std_model"}, sensors=osensor)
    )

    # give problem overview
    problem.info()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    2022-02-11 10:12:19.987 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.987 | INFO     | Problem summary: Linear regression with normal noise                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.987 | INFO     | ====================================================                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.987 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     | Forward models                                                                                       | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     | ---------------------------------------------------------                                            | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     |  Model name   | Global parameters   | Local parameters                                               | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     | --------------+---------------------+--------------------                                            | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     |  LinearModel  | a, b                | m, b                                                           | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     | Priors                                                                                               | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     | ----------------------------------------------------------------                                     | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.988 | INFO     |  Prior name          | Global parameters   | Local parameters                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     | ---------------------+---------------------+--------------------                                     | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     |  a_uninformative     | a                   | a                                                       | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     |  b_uninformative     | b                   | b                                                       | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     |  sigma_uninformative | sigma               | sigma                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     | Parameter overview                                                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     | -----------------------------------------------------                                                | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     |  Parameter type/role   | Parameter names   |   Count                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.989 | INFO     | -----------------------+-------------------+---------                                                | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     |  Model parameters      | a, b              |       2                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     |  Prior parameters      |                   |       0                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     |  Likelihood parameters | sigma             |       1                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     |  Const parameters      |                   |       0                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     |  Latent parameters     | a, b, sigma       |       3                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     | Parameter explanations                                                                               | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.990 | INFO     | ----------------------------------                                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     |  Name   | Short explanation                                                                          | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     | --------+-------------------------                                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     |  a      | No explanation provided                                                                    | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     |  b      | No explanation provided                                                                    | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     |  sigma  | No explanation provided                                                                    | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     | Constant parameters                                                                                  | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.991 | INFO     | ------------------                                                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     |  Name   | Value                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     | --------+---------                                                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     | Theta interpretation                                                                                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     | +---------------------------+                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     | |  Theta  |    Parameter    |                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     | |  index  |      name       |                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.992 | INFO     | |---------------------------|                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.993 | INFO     | |      0 --> a              |                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.993 | INFO     | |      1 --> b              |                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.993 | INFO     | |      2 --> sigma          |                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.993 | INFO     | +---------------------------+                                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.993 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.993 | INFO     | Added experiments                                                                                    | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     | --------------------------------------------------                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     |  Name         | Sensor values   | Forward model                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     | --------------+-----------------+-----------------                                                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     |  TestSeries_1 | x (50 elements) | LinearModel                                                        | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     |               | y (50 elements) |                                                                    | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     | Added likelihood models                                                                              | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.994 | INFO     | ------------------------------------------------------------------------------------                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.995 | INFO     |  Name               | Glob. prms   | Loc. prms   | Target sensors   | Experiments                    | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.995 | INFO     | --------------------+--------------+-------------+------------------+---------------                 | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.995 | INFO     |  likelihood_model_0 | sigma        | std_model   | y                | TestSeries_1                   | probeye.definition.inference_problem:info:1145
    2022-02-11 10:12:19.995 | INFO     |                                                                                                      | probeye.definition.inference_problem:info:1145

    '\nProblem summary: Linear regression with normal noise\n====================================================\n\nForward models\n---------------------------------------------------------\n Model name   | Global parameters   | Local parameters\n--------------+---------------------+--------------------\n LinearModel  | a, b                | m, b\n\nPriors\n----------------------------------------------------------------\n Prior name          | Global parameters   | Local parameters\n---------------------+---------------------+--------------------\n a_uninformative     | a                   | a\n b_uninformative     | b                   | b\n sigma_uninformative | sigma               | sigma\n\nParameter overview\n-----------------------------------------------------\n Parameter type/role   | Parameter names   |   Count\n-----------------------+-------------------+---------\n Model parameters      | a, b              |       2\n Prior parameters      |                   |       0\n Likelihood parameters | sigma             |       1\n Const parameters      |                   |       0\n Latent parameters     | a, b, sigma       |       3\n\nParameter explanations\n----------------------------------\n Name   | Short explanation\n--------+-------------------------\n a      | No explanation provided\n b      | No explanation provided\n sigma  | No explanation provided\n\nConstant parameters\n------------------\n Name   | Value\n--------+---------\n\nTheta interpretation\n+---------------------------+\n|  Theta  |    Parameter    |\n|  index  |      name       |\n|---------------------------|\n|      0 --> a              |\n|      1 --> b              |\n|      2 --> sigma          |\n+---------------------------+\n\nAdded experiments\n--------------------------------------------------\n Name         | Sensor values   | Forward model\n--------------+-----------------+-----------------\n TestSeries_1 | x (50 elements) | LinearModel\n              | y (50 elements) |\n\nAdded likelihood models\n------------------------------------------------------------------------------------\n Name               | Glob. prms   | Loc. prms   | Target sensors   | Experiments\n--------------------+--------------+-------------+------------------+---------------\n likelihood_model_0 | sigma        | std_model   | y                | TestSeries_1\n'



.. GENERATED FROM PYTHON SOURCE LINES 130-131

Estimate the parameters using `Scipy`

.. GENERATED FROM PYTHON SOURCE LINES 131-133

.. code-block:: default

    scipy_solver = ScipySolver(problem, show_progress=True)
    inference_data = scipy_solver.run_max_likelihood()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    2022-02-11 10:12:19.997 | INFO     | Solving problem via maximum likelihood estimation                                                    | probeye.inference.scipy_.solver:run_max_likelihood:372
    2022-02-11 10:12:19.997 | INFO     | Using start values:                                                                                  | probeye.inference.scipy_.solver:run_max_likelihood:386
    2022-02-11 10:12:19.997 | INFO     | a      = 1.0                                                                                         | probeye.subroutines:print_dict_in_rows:767
    2022-02-11 10:12:19.998 | INFO     | b      = 1.0                                                                                         | probeye.subroutines:print_dict_in_rows:767
    2022-02-11 10:12:19.998 | INFO     | sigma  = 1.0                                                                                         | probeye.subroutines:print_dict_in_rows:767
    2022-02-11 10:12:19.998 | INFO     | Starting optimizer (using Nelder-Mead)                                                               | probeye.inference.scipy_.solver:run_max_likelihood:390
    2022-02-11 10:12:19.998 | INFO     | No solver options specified                                                                          | probeye.inference.scipy_.solver:run_max_likelihood:395
    2022-02-11 10:12:20.008 | INFO     |                                                                                                      | probeye.inference.scipy_.solver:summarize_ml_results:296
    2022-02-11 10:12:20.008 | INFO     | Results of maximum likelihood estimation                                                             | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.008 | INFO     | =====================================                                                                | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.008 | INFO     | Optimization terminated successfully.                                                                | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.008 | INFO     | -------------------------------------                                                                | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.008 | INFO     | Number of iterations:           78                                                                   | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.009 | INFO     | Number of function evaluations: 145                                                                  | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.009 | INFO     | -------------------------------------                                                                | probeye.inference.scipy_.solver:summarize_ml_results:299
    2022-02-11 10:12:20.009 | INFO     | a_opt     = [2.70337881] (start = 1.0)                                                               | probeye.inference.scipy_.solver:summarize_ml_results:322
    2022-02-11 10:12:20.009 | INFO     | b_opt     = [1.58555241] (start = 1.0)                                                               | probeye.inference.scipy_.solver:summarize_ml_results:322
    2022-02-11 10:12:20.010 | INFO     | sigma_opt = [0.48107303] (start = 1.0)                                                               | probeye.inference.scipy_.solver:summarize_ml_results:322
    2022-02-11 10:12:20.010 | INFO     |                                                                                                      | probeye.inference.scipy_.solver:summarize_ml_results:323





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  27.182 seconds)


.. _sphx_glr_download_auto_examples_plot_maximum_likelihood.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_maximum_likelihood.py <plot_maximum_likelihood.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_maximum_likelihood.ipynb <plot_maximum_likelihood.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
